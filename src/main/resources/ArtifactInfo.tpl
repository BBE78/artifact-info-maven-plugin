package @artifact-info.packageName@;

import java.io.PrintStream;


/**
 * Generated by ${project.name} v${project.version}
 * More information on ${project.url}
 */
public final class @artifact-info.className@ {
    
    /** The project group ID. */
    private static final String GROUP_ID = "@artifact-info.groupId@";
    
    /** The project artifact ID. */
    private static final String ARTIFACT_ID = "@artifact-info.artifactId@";
    
    /** The project version. */
    private static final String VERSION = "@artifact-info.version@";
    
    /** The project name. */
    private static final String NAME = "@artifact-info.name@";
    
    /** The project description. */
    private static final String DESCRIPTION = "@artifact-info.description@";
    
    /** The user name that built the project. */
    private static final String BUILT_BY = "@artifact-info.builtBy@";
    
    /** The project build date. */
    private static final String BUILD_DATE = "@artifact-info.buildDate@";
    
    /** The host name where the project was built. */
    private static final String BUILD_HOST = "@artifact-info.buildHost@";
    
    
    /**
     * Returns the project groupId.
     * Could not be <code>null</code>.
     * 
     * @return the project groupId.
     */
    public static String getGroupId() {
        return GROUP_ID;
    }
    
    
    /**
     * Returns the project artifactId.
     * Could not be <code>null</code>.
     * 
     * @return the project artifactId.
     */
    public static String getArtifactId() {
        return ARTIFACT_ID;
    }
    
    
    /**
     * Returns the project version.
     * Could not be <code>null</code>.
     * 
     * @return the project version.
     */
    public static String getVersion() {
        return VERSION;
    }
    
    
    /**
     * Returns the project name.
     * Could not be <code>null</code> but could be empty.
     * 
     * @return the project name.
     */
    public static String getName() {
        return NAME;
    }
    
    
    /**
     * Returns the project description.
     * Could not be <code>null</code> but could be empty.
     * 
     * @return the project description.
     */
    public static String getDescription() {
        return DESCRIPTION;
    }
    
    
    /**
     * Returns the user name that built the project.
     * Could be <code>null</code> or empty.
     * 
     * @return the user name that built the project.
     */
    public static String getBuiltBy() {
        return BUILT_BY;
    }
    
    
    /**
     * Returns the project build date as String in GMT timezone.
     * Could not be <code>null</code>.
     * 
     * @return the project build date.
     */
    public static String getBuildDate() {
        return BUILD_DATE;
    }
    
    
    /**
     * Returns the host name where the project was built.
     * Could not be <code>null</code> but could be <code>unknown</code>.
     * 
     * @return the host name where the project was built.
     */
    public static String getBuildHost() {
        return BUILD_HOST;
    }
    
    
    /**
     * Returns the project full name, composed of the project name and project version.
     * Could not be <code>null</code>.
     * 
     * @return the project full name.
     */
    public static String getFullName() {
        return getName() + " [v" + getVersion() + "]"; 
    }
    
    
    /**
     * Main entry of this class: display in the standard out the properties.
     * 
     * @param args
     *      the program arguments, not used.
     */
    public static void main(String[] args) {
        displayProperties(System.out);
    }
    
    
    /**
     * Display the properties on the specified PrintStream.
     * 
     * @param out
     *      the PrintStream where properties will be displayed.
     */
    public static void displayProperties(final PrintStream out) {
        out.println(getFullName());
        out.println("\t- groupId    : " + getGroupId());
        out.println("\t- artifactId : " + getArtifactId());
        out.println("\t- version    : " + getVersion());
        out.println("\t- name       : " + getName());
        out.println("\t- description: " + getDescription());
        out.println("\t- built by   : " + getBuiltBy());
        out.println("\t- build date : " + getBuildDate());
        out.println("\t- build host : " + getBuildHost());
    }
    
}